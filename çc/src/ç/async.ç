#include "รง.h"

// until // prehaps add a while keyword ?
// implement is ... not keyword ?
// how to differenciate between name () and macro()() that returns a name ?
//  * first solution:: Use C99 preprocessing first before cedilla, use cpp first or gcc -E 
//  * second solution:: Use C99 preprocessing after cedilla, implement cpp somehow

// anon function with *fptr *fdata
// lambda capture 
// await may be used as a value
#if ide_compat == 1
#define await
#endif
macro 
{
    auto k = match 
    (
        "await",
        is space3, // match any space indefinitely ??
        func_name until
        "(",
        arguments until is closing_parenthese 
        ")",
        function_footer until ...
    )
    asprintf("%s %s func_name(arguments, callback)")
}

#if TEST

int main()
{}

#endif
